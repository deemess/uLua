Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: alltest.luc
                         ** global header start **
0000  1B4C7561           header signature: "\27Lua"
0004  51                 version (major:minor hex digits)
0005  00                 format (0=official)
0006  01                 endianness (1=little endian)
0007  04                 size of int (bytes)
0008  04                 size of size_t (bytes)
0009  04                 size of Instruction (bytes)
000A  08                 size of number (bytes)
000B  00                 integral (1=integral)
                         * number type: double
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
                         
000C                     ** function [0] definition (level 1)
                         ** start of function **
000C  00000000           string size (0)
                         source name: (none)
0010  00000000           line defined (0)
0014  00000000           last line defined (0)
0018  00                 nups (0)
0019  00                 numparams (0)
001A  02                 is_vararg (2)
001B  06                 maxstacksize (6)
                         * code:
001C  26000000           sizecode (38)
0020  01000000           [01] loadk      0   0        ; 1
0024  41400000           [02] loadk      1   1        ; 10
0028  81000000           [03] loadk      2   0        ; 1
002C  20800080           [04] forprep    0   3        ; to [8]
0030  05810000           [05] getglobal  4   2        ; print
0034  40018001           [06] move       5   3      
0038  1C410001           [07] call       4   2   1  
003C  1FC0FE7F           [08] forloop    0   -4       ; to [5] if loop
0040  24000000           [09] closure    0   0        ; 0 upvalues
0044  07C00000           [10] setglobal  0   3        ; func1
0048  24400000           [11] closure    0   1        ; 0 upvalues
004C  07000100           [12] setglobal  0   4        ; func2
0050  01000000           [13] loadk      0   0        ; 1
0054  07400100           [14] setglobal  0   5        ; a
0058  01C00100           [15] loadk      0   7        ; 3
005C  07800100           [16] setglobal  0   6        ; b
0060  01400200           [17] loadk      0   9        ; 3.5
0064  07000200           [18] setglobal  0   8        ; c
0068  05C00000           [19] getglobal  0   3        ; func1
006C  45400100           [20] getglobal  1   5        ; a
0070  85800100           [21] getglobal  2   6        ; b
0074  1C808001           [22] call       0   3   2  
0078  07800200           [23] setglobal  0   10       ; result1
007C  05000100           [24] getglobal  0   4        ; func2
0080  45400100           [25] getglobal  1   5        ; a
0084  85800100           [26] getglobal  2   6        ; b
0088  C5000200           [27] getglobal  3   8        ; c
008C  1C800002           [28] call       0   4   2  
0090  07C00200           [29] setglobal  0   11       ; result2
0094  05800000           [30] getglobal  0   2        ; print
0098  41000300           [31] loadk      1   12       ; "Result1 = "
009C  85800200           [32] getglobal  2   10       ; result1
00A0  1C408001           [33] call       0   3   1  
00A4  05800000           [34] getglobal  0   2        ; print
00A8  41400300           [35] loadk      1   13       ; "Result2 = "
00AC  85C00200           [36] getglobal  2   11       ; result2
00B0  1C408001           [37] call       0   3   1  
00B4  1E008000           [38] return     0   1      
                         * constants:
00B8  0E000000           sizek (14)
00BC  03                 const type 3
00BD  000000000000F03F   const [0]: (1)
00C5  03                 const type 3
00C6  0000000000002440   const [1]: (10)
00CE  04                 const type 4
00CF  06000000           string size (6)
00D3  7072696E7400       "print\0"
                         const [2]: "print"
00D9  04                 const type 4
00DA  06000000           string size (6)
00DE  66756E633100       "func1\0"
                         const [3]: "func1"
00E4  04                 const type 4
00E5  06000000           string size (6)
00E9  66756E633200       "func2\0"
                         const [4]: "func2"
00EF  04                 const type 4
00F0  02000000           string size (2)
00F4  6100               "a\0"
                         const [5]: "a"
00F6  04                 const type 4
00F7  02000000           string size (2)
00FB  6200               "b\0"
                         const [6]: "b"
00FD  03                 const type 3
00FE  0000000000000840   const [7]: (3)
0106  04                 const type 4
0107  02000000           string size (2)
010B  6300               "c\0"
                         const [8]: "c"
010D  03                 const type 3
010E  0000000000000C40   const [9]: (3.5)
0116  04                 const type 4
0117  08000000           string size (8)
011B  726573756C743100   "result1\0"
                         const [10]: "result1"
0123  04                 const type 4
0124  08000000           string size (8)
0128  726573756C743200   "result2\0"
                         const [11]: "result2"
0130  04                 const type 4
0131  0B000000           string size (11)
0135  526573756C743120+  "Result1 "
013D  3D2000             "= \0"
                         const [12]: "Result1 = "
0140  04                 const type 4
0141  0B000000           string size (11)
0145  526573756C743220+  "Result2 "
014D  3D2000             "= \0"
                         const [13]: "Result2 = "
                         * functions:
0150  02000000           sizep (2)
                         
0154                     ** function [0] definition (level 2)
                         ** start of function **
0154  00000000           string size (0)
                         source name: (none)
0158  07000000           line defined (7)
015C  0A000000           last line defined (10)
0160  00                 nups (0)
0161  02                 numparams (2)
0162  00                 is_vararg (0)
0163  03                 maxstacksize (3)
                         * code:
0164  03000000           sizecode (3)
0168  8C400000           [1] add        2   0   1  
016C  9E000001           [2] return     2   2      
0170  1E008000           [3] return     0   1      
                         * constants:
0174  00000000           sizek (0)
                         * functions:
0178  00000000           sizep (0)
                         * lines:
017C  00000000           sizelineinfo (0)
                         [pc] (line)
                         * locals:
0180  00000000           sizelocvars (0)
                         * upvalues:
0184  00000000           sizeupvalues (0)
                         ** end of function **

                         
0188                     ** function [1] definition (level 2)
                         ** start of function **
0188  00000000           string size (0)
                         source name: (none)
018C  0C000000           line defined (12)
0190  11000000           last line defined (17)
0194  00                 nups (0)
0195  03                 numparams (3)
0196  00                 is_vararg (0)
0197  05                 maxstacksize (5)
                         * code:
0198  05000000           sizecode (5)
019C  CC400000           [1] add        3   0   1  
01A0  0E810001           [2] mul        4   2   2  
01A4  CC008101           [3] add        3   3   4  
01A8  DE000001           [4] return     3   2      
01AC  1E008000           [5] return     0   1      
                         * constants:
01B0  00000000           sizek (0)
                         * functions:
01B4  00000000           sizep (0)
                         * lines:
01B8  00000000           sizelineinfo (0)
                         [pc] (line)
                         * locals:
01BC  00000000           sizelocvars (0)
                         * upvalues:
01C0  00000000           sizeupvalues (0)
                         ** end of function **

                         * lines:
01C4  00000000           sizelineinfo (0)
                         [pc] (line)
                         * locals:
01C8  00000000           sizelocvars (0)
                         * upvalues:
01CC  00000000           sizeupvalues (0)
                         ** end of function **

01D0                     ** end of chunk **
